#!/bin/bash

: ${FAKESCAN_EXT:=scanned}

printUsage()
{
    cat <<HELPTEXT
Convert the passed PDF document(s) (to the same directory or TARGETDIR, with an
added *.${FAKESCAN_EXT}.pdf extension) so that it appears as if printed out and
rescanned.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[-o|--to TARGETDIR] [--] PDF-FILE [...] [-?|-h|--help]'
}
targetDirspec=
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--to|-o)	shift
			if [ ! -d "$1" ]; then
			    printf >&2 "ERROR: Target directory '%s' does not exist\\n" "$1"
			    exit 2
			fi
			targetDirspec="${1:?}"; shift
			;;
	--)		shift; break;;
	-*)		{ echo "ERROR: Unknown option \"$1\"!"; echo; printUsage "$0"; } >&2; exit 2;;
	*)		break;;
    esac
done
if [ $# -eq 0 ]; then
    printUsage "$0" >&2
    exit 2
fi

status=0
for pdf
do
    dirspec="${targetDirspec:-$(dirname -- "$pdf")}"
    targetPdf="${dirspec}/$(fileExtension --basename --splice ".${FAKESCAN_EXT}" "$pdf")"

    convert \
	-density 150 \
	"$pdf" \
	\( +clone +noise Random -threshold 98% -negate -level 98%,98% \) \
	-compose multiply -composite \
	-evaluate-sequence min \
	-blur "0x$((RANDOM % 2))" \
	-level 25%,75% \
	-rotate "-0.$((RANDOM % 5 + 1))" \
	-sharpen "0x1.$((RANDOM % 9 + 1))" \
	-blur "0x$((RANDOM % 2))" \
	-level 10%,90% \
	-rotate "-0.$((RANDOM % 5 + 1))" \
	-sharpen 0x1.2 \
	-modulate 100,$((RANDOM % 40 + 50)),100 \
	"$targetPdf" || { status=$?; continue; }

    printf '%s\n' "$targetPdf"
done
exit $status
